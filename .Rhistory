prediction_bands_which_belong <- list()
intervals <- list()
FTest <- matrix(NA,nrow(xnew),length(pred_test$z))
for (ii in 1:nrow(xnew)){
FTest[ii,] <- cumsum(pred_test$CDE[ii,])*diff(pred_test$z)[1]
prediction_bands_which_belong[[ii]] <- FTest[ii,]>=ths[1]&FTest[ii,]<=ths[2]
intervals[[ii]] <- paste0("(",min(pred_test$z[prediction_bands_which_belong[[ii]]]),
",",max(pred_test$z[prediction_bands_which_belong[[ii]]]),")")
}
return_value <-list(y_grid=pred_test$z,ths=ths,densities=pred_test$CDE,
prediction_bands_which_belong=prediction_bands_which_belong,
intervals=intervals,type="dist",alpha=alpha)
} else{
stop(paste0("Type of distribution not implemented", " (",type,")"))
}
class(return_value) <- "bands"
return(return_value)
}
# CD-split
bands <- predict(fit,xnew,
k=100,type="cd")
plot(bands,ynew)
bands$intervals[[1]]
bands$intervals[[10]]
# CD-split
bands <- predict(fit,xnew,
k=2,type="cd")
plot(bands,ynew)
# CD-split
bands <- predict(fit,xnew,
k=1,type="cd")
plot(bands,ynew)
# CD-split
bands <- predict(fit,xnew,
k=1000,type="cd")
plot(bands,ynew)
# CD-split
bands <- predict(fit,xnew,
type="cd")
plot(bands,ynew)
plot.bands <- function(bands,ynew=NULL)
{
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
data_plot_list[[ii]] <- data.frame(x=ii,y=bands$y_grid[bands$prediction_bands_which_belong[[ii]]])
}
data_plot_regions <- do.call("rbind",data_plot_list)
type <- ifelse(bands$type=="dist","Dist-split","CD-split")
title <- paste0(type, "; alpha=",bands$alpha)
if(bands$type=="CD-split")
{
title <- paste0(title," (k=",bands$k,")"))
}
g <- ggplot()+
geom_point(data=data_plot_regions,
aes(x=x,y=y),alpha=0.02,color="red")+
theme_bw()+
xlab("Sample id")+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=24,face="bold"),
legend.title = element_blank(),
legend.position = c(0.01, 0.3),
legend.justification = c(0, 1),
plot.title = element_text(size = 28, face = "bold"),
legend.text=element_text(size=22))+
ggtitle(title)
if(!is.null(ynew))
{
data_plot_y <-data.frame(x=1:length(bands$prediction_bands_which_belong),y=ynew)
g <- g+geom_point(data=data_plot_y,
aes(x=x,y=y))
}
plot(g)
return(g)
}
plot.bands <- function(bands,ynew=NULL)
{
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
data_plot_list[[ii]] <- data.frame(x=ii,y=bands$y_grid[bands$prediction_bands_which_belong[[ii]]])
}
data_plot_regions <- do.call("rbind",data_plot_list)
type <- ifelse(bands$type=="dist","Dist-split","CD-split")
title <- paste0(type, "; alpha=",bands$alpha)
if(bands$type=="CD-split")
{
title <- paste0(title," (k=",bands$k,")"))
}
g <- ggplot()+
geom_point(data=data_plot_regions,
aes(x=x,y=y),alpha=0.02,color="red")+
theme_bw()+
xlab("Sample id")+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=24,face="bold"),
legend.title = element_blank(),
legend.position = c(0.01, 0.3),
legend.justification = c(0, 1),
plot.title = element_text(size = 28, face = "bold"),
legend.text=element_text(size=22))+
ggtitle(title)
if(!is.null(ynew))
{
data_plot_y <-data.frame(x=1:length(bands$prediction_bands_which_belong),y=ynew)
g <- g+geom_point(data=data_plot_y,
aes(x=x,y=y))
}
plot(g)
return(g)
}
plot.bands <- function(bands,ynew=NULL)
{
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
data_plot_list[[ii]] <- data.frame(x=ii,y=bands$y_grid[bands$prediction_bands_which_belong[[ii]]])
}
data_plot_regions <- do.call("rbind",data_plot_list)
type <- ifelse(bands$type=="dist","Dist-split","CD-split")
title <- paste0(type, "; alpha=",bands$alpha)
if(bands$type=="CD-split")
{
title <- paste0(title," (k=",bands$k,")")
}
g <- ggplot()+
geom_point(data=data_plot_regions,
aes(x=x,y=y),alpha=0.02,color="red")+
theme_bw()+
xlab("Sample id")+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=24,face="bold"),
legend.title = element_blank(),
legend.position = c(0.01, 0.3),
legend.justification = c(0, 1),
plot.title = element_text(size = 28, face = "bold"),
legend.text=element_text(size=22))+
ggtitle(title)
if(!is.null(ynew))
{
data_plot_y <-data.frame(x=1:length(bands$prediction_bands_which_belong),y=ynew)
g <- g+geom_point(data=data_plot_y,
aes(x=x,y=y))
}
plot(g)
return(g)
}
predict.predictionBands <- function(cd_split_fit,xnew,type="dist",alpha=0.1,
k=min(100,length(cd_split_fit$conformity_score_train)))
{
pred_test <- predict(cd_split_fit$density_fit,xnew)
if(type=="cd")
{
prediction_bands_which_belong <- list()
intervals <- list()
if(k<length(cd_split_fit$conformity_score_train))
{
ths <- rep(NA,length(cd_split_fit$conformity_score_train))
g_test <- matrix(NA,nrow(xnew),length(cd_split_fit$t_grid))
for(ii in 1:nrow(xnew))
{
g_test[ii,] <- profile_density(cd_split_fit$t_grid,
pred_test$z,
pred_test$CDE[ii,])
}
neighbors <- which_neighbors(cd_split_fit$g_train,
g_test,k=k)
for(ii in 1:nrow(xnew))
{
ths[ii] <- quantile(cd_split_fit$conformity_score_train[neighbors[ii,]],probs=alpha)
prediction_bands_which_belong[[ii]] <- pred_test$CDE[ii,]>=ths[ii]
intervals[[ii]] <- compute_intervals(prediction_bands_which_belong[[ii]],
pred_test$z)
}
} else {
ths <- quantile(cd_split_fit$conformity_score_train,
probs=alpha)
for(ii in 1:nrow(xnew))
{
prediction_bands_which_belong[[ii]] <- pred_test$CDE[ii,]>=ths
intervals[[ii]] <- compute_intervals(prediction_bands_which_belong[[ii]],
pred_test$z)
}
ths <- rep(ths,nrow(xnew))
}
return_value <-list(y_grid=pred_test$z,ths=ths,densities=pred_test$CDE,
prediction_bands_which_belong=prediction_bands_which_belong,
intervals=intervals,ths=ths,type="cd",alpha=alpha,k=k)
} else if(type=="dist"){
ths <-  quantile(cd_split_fit$cum_dist_evaluated_train,
probs = c(alpha/2,1-alpha/2))
prediction_bands_which_belong <- list()
intervals <- list()
FTest <- matrix(NA,nrow(xnew),length(pred_test$z))
for (ii in 1:nrow(xnew)){
FTest[ii,] <- cumsum(pred_test$CDE[ii,])*diff(pred_test$z)[1]
prediction_bands_which_belong[[ii]] <- FTest[ii,]>=ths[1]&FTest[ii,]<=ths[2]
intervals[[ii]] <- paste0("(",min(pred_test$z[prediction_bands_which_belong[[ii]]]),
",",max(pred_test$z[prediction_bands_which_belong[[ii]]]),")")
}
return_value <-list(y_grid=pred_test$z,ths=ths,densities=pred_test$CDE,
prediction_bands_which_belong=prediction_bands_which_belong,
intervals=intervals,type="dist",alpha=alpha)
} else{
stop(paste0("Type of distribution not implemented", " (",type,")"))
}
class(return_value) <- "bands"
return(return_value)
}
# CD-split
bands <- predict(fit,xnew,
type="cd")
plot(bands,ynew)
# Dist-split
bands <- predict(fit,xnew,
k=100,type="dist")
plot(bands,ynew)
plot.bands <- function(bands,ynew=NULL)
{
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
data_plot_list[[ii]] <- data.frame(x=ii,y=bands$y_grid[bands$prediction_bands_which_belong[[ii]]])
}
data_plot_regions <- do.call("rbind",data_plot_list)
type <- ifelse(bands$type=="dist","Dist-split","CD-split")
title <- paste0(type, "; alpha=",bands$alpha)
if(bands$type=="cd")
{
title <- paste0(title," (k=",bands$k,")")
}
g <- ggplot()+
geom_point(data=data_plot_regions,
aes(x=x,y=y),alpha=0.02,color="red")+
theme_bw()+
xlab("Sample id")+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=24,face="bold"),
legend.title = element_blank(),
legend.position = c(0.01, 0.3),
legend.justification = c(0, 1),
plot.title = element_text(size = 28, face = "bold"),
legend.text=element_text(size=22))+
ggtitle(title)
if(!is.null(ynew))
{
data_plot_y <-data.frame(x=1:length(bands$prediction_bands_which_belong),y=ynew)
g <- g+geom_point(data=data_plot_y,
aes(x=x,y=y))
}
plot(g)
return(g)
}
# CD-split
bands <- predict(fit,xnew,
type="cd")
plot(bands,ynew)
class(fit$density_fit)
devtools::load_all(".")
library(predictionBands)
devtools::document()
as.matrix(1:5)
devtools::load_all(".")
library(predictionBands)
# generate data
n <- 1000
n_new <- 50
d <- 10
data <- matrix(NA,n,d+1)
x <- matrix(rnorm(n*d),n,d)
y <- x[,1]+rnorm(n,0,0.1)
fit <- fit_predictionBands(x,y,0.5,0.4,0.1)
library(predictionBands)
# generate data
n <- 1000
n_new <- 50
d <- 10
data <- matrix(NA,n,d+1)
x <- matrix(rnorm(n*d),n,d)
y <- x[,1]+rnorm(n,0,0.1)
fit <- fit_predictionBands(x,y,0.5,0.4,0.1)
xnew <- matrix(rnorm(n_new*d),n_new,d)
ynew <- xnew[,1]+rnorm(n_new,0,0.1)
# Dist-split
bands <- predict(fit,xnew,
type="dist")
plot(bands)
library(tidyverse)
plot(bands)
plot(bands,ynew)
# CD-split
bands <- predict(fit,xnew,
type="cd")
predict.predictionBands <- function(cd_split_fit,xnew,type="dist",alpha=0.1)
{
pred_test <- predict(cd_split_fit$density_fit,xnew)
if(type=="cd")
{
prediction_bands_which_belong <- list()
intervals <- list()
ths <- rep(NA,length(cd_split_fit$conformity_score_train))
g_test <- matrix(NA,nrow(xnew),length(cd_split_fit$t_grid))
for(ii in 1:nrow(xnew))
{
g_test[ii,] <- profile_density(cd_split_fit$t_grid,
pred_test$z,
pred_test$CDE[ii,])
}
which_partition_test <- which_neighbors(cd_split_fit$centers_kmeans,
g_test,1)
which_partition_train <- which_neighbors(cd_split_fit$centers_kmeans,
cd_split_fit$g_train,1)
ths_partition <- rep(NA,nrow(cd_split_fit$centers_kmeans))
for(ii in 1:nrow(cd_split_fit$centers_kmeans))
{
ths_partition[ii] <-  quantile(cd_split_fit$conformity_score_train[which_partition_train==ii],
probs=alpha)
}
ths_partition[is.na(ths_partition)] <- quantile(cd_split_fit$conformity_score_train,probs=alpha)
ths <- ths_partition[which_partition_test]
for(ii in 1:nrow(xnew))
{
prediction_bands_which_belong[[ii]] <- pred_test$CDE[ii,]>=ths
intervals[[ii]] <- compute_intervals(prediction_bands_which_belong[[ii]],
pred_test$z)
}
return_value <-list(y_grid=pred_test$z,ths=ths,densities=pred_test$CDE,
prediction_bands_which_belong=prediction_bands_which_belong,
intervals=intervals,ths=ths,type="cd",alpha=alpha)
} else if(type=="dist"){
ths <-  quantile(cd_split_fit$cum_dist_evaluated_train,
probs = c(alpha/2,1-alpha/2))
prediction_bands_which_belong <- list()
intervals <- list()
FTest <- matrix(NA,nrow(xnew),length(pred_test$z))
for (ii in 1:nrow(xnew)){
FTest[ii,] <- cumsum(pred_test$CDE[ii,])*diff(pred_test$z)[1]
prediction_bands_which_belong[[ii]] <- FTest[ii,]>=ths[1]&FTest[ii,]<=ths[2]
intervals[[ii]] <- paste0("(",min(pred_test$z[prediction_bands_which_belong[[ii]]]),
",",max(pred_test$z[prediction_bands_which_belong[[ii]]]),")")
}
return_value <-list(y_grid=pred_test$z,ths=ths,densities=pred_test$CDE,
prediction_bands_which_belong=prediction_bands_which_belong,
intervals=intervals,type="dist",alpha=alpha)
} else{
stop(paste0("Type of distribution not implemented", " (",type,")"))
}
class(return_value) <- "bands"
return(return_value)
}
devtools::load_all(".")
# CD-split
bands <- predict(fit,xnew,
type="cd")
plot(bands)
fit=cd_split_fit
cd_split_fit=fit
alpha=0.1
pred_test <- predict(cd_split_fit$density_fit,xnew)
prediction_bands_which_belong <- list()
intervals <- list()
ths <- rep(NA,length(cd_split_fit$conformity_score_train))
g_test <- matrix(NA,nrow(xnew),length(cd_split_fit$t_grid))
for(ii in 1:nrow(xnew))
{
g_test[ii,] <- profile_density(cd_split_fit$t_grid,
pred_test$z,
pred_test$CDE[ii,])
}
which_partition_test <- which_neighbors(cd_split_fit$centers_kmeans,
g_test,1)
which_partition_train <- which_neighbors(cd_split_fit$centers_kmeans,
cd_split_fit$g_train,1)
which_partition_test
cd_split_fit$centers_kmeans
dim(cd_split_fit$centers_kmeans)
which_partition_train <- which_neighbors(cd_split_fit$centers_kmeans,
cd_split_fit$g_train,1)
ths_partition <- rep(NA,nrow(cd_split_fit$centers_kmeans))
for(ii in 1:nrow(cd_split_fit$centers_kmeans))
{
ths_partition[ii] <-  quantile(cd_split_fit$conformity_score_train[which_partition_train==ii],
probs=alpha)
}
ths_partition
ths_partition[is.na(ths_partition)] <- quantile(cd_split_fit$conformity_score_train,probs=alpha)
ths <- ths_partition[which_partition_test]
ths
for(ii in 1:nrow(xnew))
{
prediction_bands_which_belong[[ii]] <- pred_test$CDE[ii,]>=ths
intervals[[ii]] <- compute_intervals(prediction_bands_which_belong[[ii]],
pred_test$z)
}
intervals[[ii]]
prediction_bands_which_belong[[ii]]
# CD-split
bands <- predict(fit,xnew,
type="cd")
plot(bands)
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
data_plot_list[[ii]] <- data.frame(x=ii,y=bands$y_grid[bands$prediction_bands_which_belong[[ii]]])
}
ii
bands$y_grid
bands$prediction_bands_which_belong[[ii]]]
bands$prediction_bands_which_belong[[ii]]
bands$prediction_bands_which_belong[[ii]]]
bands$y_grid[bands$prediction_bands_which_belong[[ii]]]
bands$prediction_bands_which_belong[[ii]]
bands$y_grid[bands$prediction_bands_which_belong[[ii]]]
ii=1
bands$y_grid[bands$prediction_bands_which_belong[[ii]]]
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
pred_region <- bands$y_grid[bands$prediction_bands_which_belong[[ii]]]
data_plot_list[[ii]] <- data.frame(x=ii,y=pred_region)
}
pred_region
is.null(pred_region)
pred_region
pred_region==0
type(pred_region)
class(pred_region)
length(pred_region)
bands$y_grid
median(bands$y_grid)
plot.bands <- function(bands,ynew=NULL)
{
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
pred_region <- bands$y_grid[bands$prediction_bands_which_belong[[ii]]]
if(length(pred_region)==0)
{
data_plot_list[[ii]] <- data.frame(x=ii,y=median(bands$y_grid))
next;
}
data_plot_list[[ii]] <- data.frame(x=ii,y=pred_region)
}
data_plot_regions <- do.call("rbind",data_plot_list)
type <- ifelse(bands$type=="dist","Dist-split","CD-split")
title <- paste0(type, "; alpha=",bands$alpha)
if(bands$type=="cd")
{
title <- paste0(title," (k=",bands$k,")")
}
g <- ggplot()+
geom_point(data=data_plot_regions,
aes(x=x,y=y),alpha=0.02,color="red")+
theme_bw()+
xlab("Sample id")+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=24,face="bold"),
legend.title = element_blank(),
legend.position = c(0.01, 0.3),
legend.justification = c(0, 1),
plot.title = element_text(size = 28, face = "bold"),
legend.text=element_text(size=22))+
ggtitle(title)
if(!is.null(ynew))
{
data_plot_y <-data.frame(x=1:length(bands$prediction_bands_which_belong),y=ynew)
g <- g+geom_point(data=data_plot_y,
aes(x=x,y=y))
}
plot(g)
return(g)
}
plot(bands)
plot(bands,ynew)
data_plot_list <- NULL
for(ii in 1:length(bands$prediction_bands_which_belong))
{
pred_region <- bands$y_grid[bands$prediction_bands_which_belong[[ii]]]
if(length(pred_region)==0)
{
print(ii)
data_plot_list[[ii]] <- data.frame(x=ii,y=median(bands$y_grid))
next;
}
data_plot_list[[ii]] <- data.frame(x=ii,y=pred_region)
}
devtools::load_all(".")
plot(bands,ynew)
devtools::load_all(".")
library(predictionBands)
devtools::document()
devtools::install_github("rizbicki/predictionBands")
devtools::install_github("rizbicki/predictionBands")
library(predictionBands)
# generate data
n <- 1000
n_new <- 50
d <- 10
data <- matrix(NA,n,d+1)
x <- matrix(rnorm(n*d),n,d)
y <- x[,1]+rnorm(n,0,0.1)
fit <- fit_predictionBands(x,y,0.5,0.4,0.1)
xnew <- matrix(rnorm(n_new*d),n_new,d)
ynew <- xnew[,1]+rnorm(n_new,0,0.1)
# Dist-split
bands <- predict(fit,xnew,
type="dist")
plot(bands)
plot(bands,ynew)
?plot.predictionBands
?plot.bands
