% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_functions.R
\name{fit_predictionBands}
\alias{fit_predictionBands}
\title{Fit conformal prediction bands based on density estimation for regression}
\usage{
fit_predictionBands(
  x,
  y,
  per_train = 0.4,
  per_val = 0.1,
  per_ths = 1 - per_train - per_val,
  k = max(round(per_ths * nrow(as.matrix(x))/100), 1),
  regressionFunction = FlexCoDE::regressionFunction.Forest,
  ...
)
}
\arguments{
\item{x}{Matrix with covariates of training set}

\item{y}{Vector with the (continuous) responses of training set}

\item{per_train}{# percentage of samples used for traning density estimator (defaults to 40\%)}

\item{per_val}{# percentage of samples used for tuning density estimator (defaults to 10\%)}

\item{per_ths}{# percentage of samples used for computeing thresholds for the conformal method (defaults to 50\%)}

\item{k}{# Number of clusters for cd-split. Default to round(per_ths*nrow(as.matrix(x))/100) so that each cluster has on average 100 samples}

\item{regressionFunction}{# regression function to be used for FlexCode. Defaults to Random Forests. See FlexCode documentation for additional regression methods.}

\item{...}{Additional arguments to FlexCoDE::fitFlexCoDE}
}
\value{
Returns an object of the class predictionBands with the following components:
\item{density_fit}{Object of the class FlexCoDE with the estimated density}
\item{cum_dist_evaluated_train}{Cumulative conditional distribution functions on the training set (for dist-split)}
\item{conformity_score_train}{Conformal scores on the training set (for cd-split)}
\item{t_grid}{Level sets of the densities}
\item{g_train}{Profiles of the training sample}
\item{center_kmeans}{The center of the clusters found by kmeans (in the profile space)}
}
\description{
Fit conformal prediction bands based on density estimation for regression
}
\examples{

# generate data
n <- 1000
n_new <- 50
d <- 10
data <- matrix(NA,n,d+1)
x <- matrix(rnorm(n*d),n,d)
y <- x[,1]+rnorm(n,0,0.1)
fit <- fit_predictionBands(x,y,0.5,0.4,0.1)

xnew <- matrix(rnorm(n_new*d),n_new,d)
ynew <- xnew[,1]+rnorm(n_new,0,0.1)

 # Dist-split
 bands <- predict(fit,xnew,type="dist")
 bands[[1]]
 bands[[2]]
 plot(bands)
 plot(bands,ynew)

 # CD-split
 bands <- predict(fit,xnew,type="cd")
 bands[[1]]
 bands[[2]]
 plot(bands)
 plot(bands,ynew)
}
